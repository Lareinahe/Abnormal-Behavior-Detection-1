<Window x:Class="SampleCode.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SampleCode"
    Title="Simple Drag Selection + Multiple Item Dragging" 
    Width="1000"
    Height="750"
    Loaded="Window_Loaded"
    MouseDown="Window_MouseDown"
    MouseUp="Window_MouseUp"
    MouseMove="Window_MouseMove"
        Closing="Window_Closing"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        
    >
    <Window.Resources>

        <!-- 
        Converts a color value to a brush.
        -->
        <!--<local:ColorToBrushConverter 
            x:Key="colorToBrushConverter"-->
        <!--/>-->

        <!--
        A data-template that defines the visuals for a rectangle.
        -->
        <DataTemplate 
            DataType="{x:Type local:RectangleViewModel}"
            >
            <!-- 
            The Rectangle is embedded in the Grid so that we can set the Margin
            The margin is set so that the ListBox item selection fits nicely around the Rectangle.
            -->
            <Grid
                Margin="0,2,2,2"
                >
                <TextBox  Background="YellowGreen"
                      Panel.ZIndex="90"
                    Text="{Binding Image}"  Height="20" Width="50" HorizontalContentAlignment="Right"
                          
                               VerticalAlignment="Top" 
                    >
                    <TextBox.RenderTransform>
                        <RotateTransform Angle="{ Binding Angel}" ></RotateTransform>
                    </TextBox.RenderTransform>

                </TextBox>
                <Image Source="{Binding Image}" Width="{Binding Width}"
                    Height="{Binding Height}"
                      Stretch="Fill"
                        MouseLeftButtonDown ="leftMouseDown"
                    MouseRightButtonDown="Rectangle_rightMouseDown"
                    MouseUp="Rectangle_MouseUp"
                    MouseMove="Rectangle_MouseMove"
                    MouseWheel="Rectangle_MouseWheel" >
                    <Image.RenderTransform>
                        <RotateTransform    Angle="{ Binding Angel}"/>
                    </Image.RenderTransform>
                </Image>
                
                <!--<Polygon Points="0,50 30,0  80,0 110,50 80,100 30,100 0,50 "
                    Stroke="Black"
                    StrokeThickness="1"  
                    Cursor="Hand"
                     
                         Stretch="Fill" 
                    Width="{Binding Width}"
                    Height="{Binding Height}"
                    MouseLeftButtonDown ="leftMouseDown"
                    MouseRightButtonDown="Rectangle_rightMouseDown"
                    MouseUp="Rectangle_MouseUp"
                    MouseMove="Rectangle_MouseMove"
                    MouseWheel="Rectangle_MouseWheel" >
                    <Polygon.Fill>
                        <ImageBrush    ImageSource="{Binding Image}"/>
                    </Polygon.Fill>
                    <Polygon.RenderTransform>
                        <RotateTransform    Angle="{ Binding Angel}"/>
                    </Polygon.RenderTransform>
                </Polygon>-->
                <!--<Rectangle Width="{Binding Width}"
                    Height="{Binding Height}"
                    Cursor="Hand"
                0,50 30,0  80,0 110,50 80,100 30,100 0,50
                    Stroke="Black" StrokeThickness="2"
                    RadiusY="13.5" RadiusX="13.5"
                    MouseLeftButtonDown ="Rectangle_leftMouseDown"
                           MouseRightButtonDown="Rectangle_rightMouseDown"
                    MouseUp="Rectangle_MouseUp"
                    MouseMove="Rectangle_MouseMove"
                    MouseWheel="Rectangle_MouseWheel" 
                         
      >
                    <Rectangle.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform AngleX="0"/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.LayoutTransform>
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="{Binding Image}"/>
                    </Rectangle.Fill>
                    <Rectangle.RenderTransform>
                        <RotateTransform    Angle="{ Binding Angel}"/>
                    </Rectangle.RenderTransform>
                </Rectangle>-->

            </Grid>
        </DataTemplate>

    </Window.Resources>

    <Window.DataContext>

        <!-- 
        Initialise the view model that supplies the UI with data.
        -->
        <local:ViewModel />

    </Window.DataContext>

    <Grid>
        <!--
	    This ListBox presents the colored rectangles.
        
        The data-template that defines the visuals for each rectangle is in the 
        resources section at the start of this file.
        -->

        <ListBox
             BorderThickness="0"
             x:Name="listBox"
             ItemsSource="{Binding Rectangles}"
             SelectionMode="Extended" Margin="0,3,0,-3" SelectionChanged="listBox_SelectionChanged_1"
                
            >
            <!--<ListBox.Background >
                <ImageBrush ImageSource="C:\Users\OAM\Downloads\hexa-w-crop-in-link2\hexa-w-crop in link\index2.png" />
            </ListBox.Background>-->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style
                    TargetType="ListBoxItem"
                    >
                    <Setter
                        Property="Canvas.Left"
                        Value="{Binding X}"
                        />
                    <Setter
                        Property="Canvas.Top"
                        Value="{Binding Y}" 
                        />

                    <!--todo:
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                This border is used for indicating selection.
                                Normally it is transparent, when the item is selected the border is set to blue.
                                <Border 
                                    Name="Border"
                                    BorderThickness="1"
                                    Padding="2"
                                    >
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    When the ListBoxItem is selected 
                    a simple blue border around it.
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter 
                                            TargetName="Border" 
                                            Property="BorderBrush"
                                            Value="Blue"
                                            />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    -->
                </Style>

            </ListBox.ItemContainerStyle>
        </ListBox>

        <!--
        This Canvas and Border are used as a very simple way to render a drag selection rectangle.
        -->

        <Canvas
            x:Name="dragSelectionCanvas"
            Visibility="Collapsed"
            >
            <Border 
                x:Name="dragSelectionBorder"
                BorderBrush="Blue"
                BorderThickness="1"
                Background="LightBlue"
                CornerRadius="1"
                Opacity="0.5"
                />
        </Canvas>
    </Grid>
</Window>
